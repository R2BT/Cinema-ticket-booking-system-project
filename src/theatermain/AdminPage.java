package theatermain;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import theatermain.Movie;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Asus
 */
public class AdminPage extends javax.swing.JFrame {

    //Show User
    int sumuser = 0;

//Add movie
    private Movie movie;

    private File f = null;
    private String path = null;
    private ImageIcon format = null;
    String fname = null;
    int s = 0;
    byte[] picture = null;
    boolean checkAddmovie = false;

    //Add Cycle
    private com.mysql.jdbc.Connection conCycle = null;
    private com.mysql.jdbc.ResultSet rsCycle = null;
    private com.mysql.jdbc.PreparedStatement pstCycle = null;
    private File fCycle = null;
    private String pathCycle = null;
    private ImageIcon formatCycle = null;
    private String nameMovie;
    boolean checkCycle = true;
    private String room_id;
    private String idMovie;
    private String currentDate;
    private String idCycle;

    /**
     * Creates new form MainPage
     */
    public AdminPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        viewUserbutton = new javax.swing.JPanel();
        viewUsertext = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        viewMoviebutton = new javax.swing.JPanel();
        addMovietext = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        viewShowtimeButton = new javax.swing.JPanel();
        showtimeText = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        exitButton = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        Blank = new javax.swing.JPanel();
        viewUser = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        total = new javax.swing.JLabel();
        viewMovie = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMovie = new javax.swing.JTable();
        addMoviebutton = new javax.swing.JButton();
        deleteMoviebutton = new javax.swing.JButton();
        viewShowtime = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableShowtime = new javax.swing.JTable();
        addShowtimebutton = new javax.swing.JButton();
        deleteMoviebutton1 = new javax.swing.JButton();
        deleteShowtimebutton = new javax.swing.JButton();
        addShowtime = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        NameMovie = new javax.swing.JComboBox<>();
        idRoom = new javax.swing.JComboBox<>();
        cycle = new javax.swing.JComboBox<>();
        date = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        backToshowTime = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        imgmovie = new javax.swing.JLabel();
        addMovie = new javax.swing.JPanel();
        time = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        movieid = new javax.swing.JTextField();
        url = new javax.swing.JLabel();
        Browse = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        moviename = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        backTomovie = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        imageshow = new javax.swing.JLabel();
        deleteMovie = new javax.swing.JPanel();
        deleteMoviecomfirmButton = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        backTomovie1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableMovietoDelete = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        deleteShowtime = new javax.swing.JPanel();
        deleteShowtimecomfirmButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        backToshowtime = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableShowtimetoDelete = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(187, 210, 197));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 0, 0));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Admin");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(102, 102, 102));

        viewUserbutton.setBackground(new java.awt.Color(153, 153, 153));
        viewUserbutton.setForeground(new java.awt.Color(204, 204, 204));
        viewUserbutton.setPreferredSize(new java.awt.Dimension(155, 57));
        viewUserbutton.setRequestFocusEnabled(false);
        viewUserbutton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                viewUserbuttonFocusGained(evt);
            }
        });
        viewUserbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewUserbuttonMouseClicked(evt);
            }
        });
        viewUserbutton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewUsertext.setFont(new java.awt.Font("Century Gothic", 1, 17)); // NOI18N
        viewUsertext.setForeground(new java.awt.Color(255, 255, 255));
        viewUsertext.setText("View User");
        viewUserbutton.add(viewUsertext, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 95, -1));
        viewUserbutton.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 36));

        viewMoviebutton.setBackground(new java.awt.Color(153, 153, 153));
        viewMoviebutton.setForeground(new java.awt.Color(153, 153, 153));
        viewMoviebutton.setPreferredSize(new java.awt.Dimension(155, 57));
        viewMoviebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewMoviebuttonMouseClicked(evt);
            }
        });

        addMovietext.setFont(new java.awt.Font("Century Gothic", 1, 17)); // NOI18N
        addMovietext.setForeground(new java.awt.Color(255, 255, 255));
        addMovietext.setText("Movie");

        javax.swing.GroupLayout viewMoviebuttonLayout = new javax.swing.GroupLayout(viewMoviebutton);
        viewMoviebutton.setLayout(viewMoviebuttonLayout);
        viewMoviebuttonLayout.setHorizontalGroup(
            viewMoviebuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMoviebuttonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(addMovietext, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        viewMoviebuttonLayout.setVerticalGroup(
            viewMoviebuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMoviebuttonLayout.createSequentialGroup()
                .addGroup(viewMoviebuttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addMovietext)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        viewShowtimeButton.setBackground(new java.awt.Color(153, 153, 153));
        viewShowtimeButton.setForeground(new java.awt.Color(204, 204, 204));
        viewShowtimeButton.setPreferredSize(new java.awt.Dimension(155, 57));
        viewShowtimeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewShowtimeButtonMouseClicked(evt);
            }
        });

        showtimeText.setBackground(new java.awt.Color(255, 255, 255));
        showtimeText.setFont(new java.awt.Font("Century Gothic", 1, 17)); // NOI18N
        showtimeText.setForeground(new java.awt.Color(255, 255, 255));
        showtimeText.setText(" Showtime");

        javax.swing.GroupLayout viewShowtimeButtonLayout = new javax.swing.GroupLayout(viewShowtimeButton);
        viewShowtimeButton.setLayout(viewShowtimeButtonLayout);
        viewShowtimeButtonLayout.setHorizontalGroup(
            viewShowtimeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewShowtimeButtonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel9)
                .addGap(15, 15, 15)
                .addComponent(showtimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        viewShowtimeButtonLayout.setVerticalGroup(
            viewShowtimeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(viewShowtimeButtonLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(showtimeText))
        );

        exitButton.setBackground(new java.awt.Color(153, 153, 153));
        exitButton.setForeground(new java.awt.Color(204, 204, 204));
        exitButton.setPreferredSize(new java.awt.Dimension(155, 57));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 17)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Exit");

        javax.swing.GroupLayout exitButtonLayout = new javax.swing.GroupLayout(exitButton);
        exitButton.setLayout(exitButtonLayout);
        exitButtonLayout.setHorizontalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitButtonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exitButtonLayout.setVerticalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitButtonLayout.createSequentialGroup()
                .addGroup(exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(viewUserbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(viewMoviebutton, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
            .addComponent(viewShowtimeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
            .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(viewUserbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(viewMoviebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(viewShowtimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 610));

        jPanel7.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 790, 30));

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        Blank.setBackground(new java.awt.Color(0, 0, 0));
        Blank.setFocusCycleRoot(true);

        javax.swing.GroupLayout BlankLayout = new javax.swing.GroupLayout(Blank);
        Blank.setLayout(BlankLayout);
        BlankLayout.setHorizontalGroup(
            BlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        BlankLayout.setVerticalGroup(
            BlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("tab4", Blank);

        viewUser.setBackground(new java.awt.Color(0, 0, 0));
        viewUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewUserMouseClicked(evt);
            }
        });

        tableUser.setAutoCreateRowSorter(true);
        tableUser.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Firstname", "Lastname", "PhoneNumber"
            }
        ));
        tableUser.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tableUser);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        total.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setText("Total User : ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(608, Short.MAX_VALUE)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout viewUserLayout = new javax.swing.GroupLayout(viewUser);
        viewUser.setLayout(viewUserLayout);
        viewUserLayout.setHorizontalGroup(
            viewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );
        viewUserLayout.setVerticalGroup(
            viewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("tab1", viewUser);

        viewMovie.setBackground(new java.awt.Color(0, 0, 0));
        viewMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewMovieMouseClicked(evt);
            }
        });

        tableMovie.setAutoCreateRowSorter(true);
        tableMovie.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableMovie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MovieID", "Moviename", "Time", "Description"
            }
        ));
        tableMovie.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(tableMovie);

        addMoviebutton.setBackground(new java.awt.Color(51, 153, 0));
        addMoviebutton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        addMoviebutton.setForeground(new java.awt.Color(255, 255, 255));
        addMoviebutton.setText("Add Movie");
        addMoviebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMoviebuttonMouseClicked(evt);
            }
        });
        addMoviebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoviebuttonActionPerformed(evt);
            }
        });

        deleteMoviebutton.setBackground(new java.awt.Color(204, 0, 0));
        deleteMoviebutton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        deleteMoviebutton.setForeground(new java.awt.Color(255, 255, 255));
        deleteMoviebutton.setText("Delete Movie");
        deleteMoviebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMoviebuttonMouseClicked(evt);
            }
        });
        deleteMoviebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMoviebuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewMovieLayout = new javax.swing.GroupLayout(viewMovie);
        viewMovie.setLayout(viewMovieLayout);
        viewMovieLayout.setHorizontalGroup(
            viewMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMovieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMovieLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addMoviebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(deleteMoviebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        viewMovieLayout.setVerticalGroup(
            viewMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMovieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMoviebutton)
                    .addComponent(deleteMoviebutton))
                .addGap(12, 12, 12))
        );

        jTabbedPane2.addTab("tab1", viewMovie);

        viewShowtime.setBackground(new java.awt.Color(0, 0, 0));
        viewShowtime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewShowtimeMouseClicked(evt);
            }
        });

        tableShowtime.setAutoCreateRowSorter(true);
        tableShowtime.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableShowtime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Theater Room", "Movie"
            }
        ));
        tableShowtime.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(tableShowtime);

        addShowtimebutton.setBackground(new java.awt.Color(51, 153, 0));
        addShowtimebutton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        addShowtimebutton.setForeground(new java.awt.Color(255, 255, 255));
        addShowtimebutton.setText("Add Showtime");
        addShowtimebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addShowtimebuttonMouseClicked(evt);
            }
        });
        addShowtimebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addShowtimebuttonActionPerformed(evt);
            }
        });

        deleteMoviebutton1.setBackground(new java.awt.Color(204, 0, 0));
        deleteMoviebutton1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        deleteMoviebutton1.setForeground(new java.awt.Color(255, 255, 255));
        deleteMoviebutton1.setText("Delete Movie");
        deleteMoviebutton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMoviebutton1MouseClicked(evt);
            }
        });
        deleteMoviebutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMoviebutton1ActionPerformed(evt);
            }
        });

        deleteShowtimebutton.setBackground(new java.awt.Color(204, 0, 0));
        deleteShowtimebutton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        deleteShowtimebutton.setForeground(new java.awt.Color(255, 255, 255));
        deleteShowtimebutton.setText("Delete Showtime");
        deleteShowtimebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteShowtimebuttonMouseClicked(evt);
            }
        });
        deleteShowtimebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteShowtimebuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewShowtimeLayout = new javax.swing.GroupLayout(viewShowtime);
        viewShowtime.setLayout(viewShowtimeLayout);
        viewShowtimeLayout.setHorizontalGroup(
            viewShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewShowtimeLayout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(addShowtimebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(deleteShowtimebutton)
                .addGap(0, 254, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewShowtimeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
            .addGroup(viewShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(viewShowtimeLayout.createSequentialGroup()
                    .addGap(335, 335, 335)
                    .addComponent(deleteMoviebutton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(336, Short.MAX_VALUE)))
        );
        viewShowtimeLayout.setVerticalGroup(
            viewShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewShowtimeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addShowtimebutton)
                    .addComponent(deleteShowtimebutton))
                .addGap(12, 12, 12))
            .addGroup(viewShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(viewShowtimeLayout.createSequentialGroup()
                    .addGap(283, 283, 283)
                    .addComponent(deleteMoviebutton1)
                    .addContainerGap(283, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("tab1", viewShowtime);

        addShowtime.setBackground(new java.awt.Color(153, 0, 0));
        addShowtime.setPreferredSize(new java.awt.Dimension(240, 360));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Add Showtime");

        NameMovie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        NameMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NameMovieMouseClicked(evt);
            }
        });
        NameMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameMovieActionPerformed(evt);
            }
        });

        idRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idRoomMouseClicked(evt);
            }
        });
        idRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idRoomActionPerformed(evt);
            }
        });

        cycle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cycle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cycleMouseClicked(evt);
            }
        });

        date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        save.setBackground(new java.awt.Color(0, 167, 59));
        save.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save Showtime");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("NameMovie");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Cycle");

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Date");

        jLabel22.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("ID Room");

        backToshowTime.setBackground(new java.awt.Color(255, 102, 0));
        backToshowTime.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 36)); // NOI18N
        backToshowTime.setForeground(new java.awt.Color(255, 102, 51));
        backToshowTime.setText("<");
        backToshowTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToshowTimeMouseClicked(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgmovie, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgmovie, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout addShowtimeLayout = new javax.swing.GroupLayout(addShowtime);
        addShowtime.setLayout(addShowtimeLayout);
        addShowtimeLayout.setHorizontalGroup(
            addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addShowtimeLayout.createSequentialGroup()
                .addGroup(addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addShowtimeLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addShowtimeLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(backToshowTime, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(240, 240, 240)
                        .addGroup(addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addShowtimeLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addGroup(addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cycle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NameMovie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(date)
                            .addComponent(idRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        addShowtimeLayout.setVerticalGroup(
            addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addShowtimeLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backToshowTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(addShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addShowtimeLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128))
                    .addGroup(addShowtimeLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jTabbedPane2.addTab("tab3", addShowtime);

        addMovie.setBackground(new java.awt.Color(153, 0, 0));

        description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionActionPerformed(evt);
            }
        });

        movieid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieidActionPerformed(evt);
            }
        });

        url.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        url.setForeground(new java.awt.Color(255, 255, 255));
        url.setText("URL :");

        Browse.setBackground(new java.awt.Color(102, 102, 102));
        Browse.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Browse.setForeground(new java.awt.Color(255, 255, 255));
        Browse.setText("Browse");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("AddPoster :");

        moviename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movienameActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(0, 167, 59));
        saveButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save Movie");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Time");

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Moviename");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("MovieID");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Description");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Add movie");

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        backTomovie.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 36)); // NOI18N
        backTomovie.setForeground(new java.awt.Color(255, 153, 0));
        backTomovie.setText("<");
        backTomovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTomovieMouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageshow, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageshow, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout addMovieLayout = new javax.swing.GroupLayout(addMovie);
        addMovie.setLayout(addMovieLayout);
        addMovieLayout.setHorizontalGroup(
            addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMovieLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Browse))
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(moviename, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                        .addComponent(description, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movieid, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 120, Short.MAX_VALUE))
            .addGroup(addMovieLayout.createSequentialGroup()
                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(backTomovie, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addMovieLayout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addMovieLayout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addMovieLayout.setVerticalGroup(
            addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMovieLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backTomovie)
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addMovieLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(movieid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addMovieLayout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(moviename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(addMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(Browse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(addMovieLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane2.addTab("tab2", addMovie);

        deleteMovie.setBackground(new java.awt.Color(153, 0, 0));

        deleteMoviecomfirmButton.setBackground(new java.awt.Color(255, 0, 51));
        deleteMoviecomfirmButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        deleteMoviecomfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteMoviecomfirmButton.setText("Delete Movie");
        deleteMoviecomfirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMoviecomfirmButtonMouseClicked(evt);
            }
        });
        deleteMoviecomfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMoviecomfirmButtonActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Select Row to delete");

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        backTomovie1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 36)); // NOI18N
        backTomovie1.setForeground(new java.awt.Color(255, 153, 0));
        backTomovie1.setText("<");
        backTomovie1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backTomovie1MouseClicked(evt);
            }
        });

        tableMovietoDelete.setAutoCreateRowSorter(true);
        tableMovietoDelete.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableMovietoDelete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MovieID", "Moviename", "Time", "Description"
            }
        ));
        tableMovietoDelete.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(tableMovietoDelete);

        jLabel29.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Delete movie");

        javax.swing.GroupLayout deleteMovieLayout = new javax.swing.GroupLayout(deleteMovie);
        deleteMovie.setLayout(deleteMovieLayout);
        deleteMovieLayout.setHorizontalGroup(
            deleteMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMovieLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backTomovie1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(deleteMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteMovieLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deleteMovieLayout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMovieLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(deleteMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMovieLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMovieLayout.createSequentialGroup()
                        .addComponent(deleteMoviecomfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(308, 308, 308))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMovieLayout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))))
        );
        deleteMovieLayout.setVerticalGroup(
            deleteMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMovieLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(deleteMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteMovieLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backTomovie1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteMoviecomfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab2", deleteMovie);

        deleteShowtime.setBackground(new java.awt.Color(153, 0, 0));
        deleteShowtime.setPreferredSize(new java.awt.Dimension(790, 589));

        deleteShowtimecomfirmButton.setBackground(new java.awt.Color(255, 0, 51));
        deleteShowtimecomfirmButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        deleteShowtimecomfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteShowtimecomfirmButton.setText("Delete Showtime");
        deleteShowtimecomfirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteShowtimecomfirmButtonMouseClicked(evt);
            }
        });
        deleteShowtimecomfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteShowtimecomfirmButtonActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Select Row to delete");

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));

        backToshowtime.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 36)); // NOI18N
        backToshowtime.setForeground(new java.awt.Color(255, 153, 0));
        backToshowtime.setText("<");
        backToshowtime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToshowtimeMouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Delete Showtime");

        tableShowtimetoDelete.setAutoCreateRowSorter(true);
        tableShowtimetoDelete.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableShowtimetoDelete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CycleID", "Date", "Time", "Theater Room", "Movie"
            }
        ));
        tableShowtimetoDelete.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(tableShowtimetoDelete);

        javax.swing.GroupLayout deleteShowtimeLayout = new javax.swing.GroupLayout(deleteShowtime);
        deleteShowtime.setLayout(deleteShowtimeLayout);
        deleteShowtimeLayout.setHorizontalGroup(
            deleteShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteShowtimeLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
            .addGroup(deleteShowtimeLayout.createSequentialGroup()
                .addGroup(deleteShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteShowtimeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(backToshowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(deleteShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(deleteShowtimeLayout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addComponent(jLabel31))
                            .addGroup(deleteShowtimeLayout.createSequentialGroup()
                                .addGap(234, 234, 234)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(deleteShowtimeLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deleteShowtimeLayout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(deleteShowtimecomfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        deleteShowtimeLayout.setVerticalGroup(
            deleteShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteShowtimeLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(deleteShowtimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backToshowtime)
                    .addGroup(deleteShowtimeLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteShowtimecomfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jTabbedPane2.addTab("tab2", deleteShowtime);

        jPanel1.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, -10, 790, 620));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void viewUserbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewUserbuttonMouseClicked
        jTabbedPane2.setSelectedIndex(1);
        viewUsertable();

    }//GEN-LAST:event_viewUserbuttonMouseClicked

    private void viewMoviebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewMoviebuttonMouseClicked
        jTabbedPane2.setSelectedIndex(2);
        viewMovietable();
    }//GEN-LAST:event_viewMoviebuttonMouseClicked
    //view User table
    public void viewUsertable() {
        DefaultTableModel model = (DefaultTableModel) tableUser.getModel();
        while (model.getRowCount() > 0) {
            model.setRowCount(0);
        }
        sumuser = 0;
        try {

            Connection con = Cinema.connectDB();
            Statement stm = con.createStatement();

            String sqlUser = "SELECT * FROM member";
            ResultSet rs = stm.executeQuery(sqlUser);

            while (rs.next()) {
                //String memberID = String.valueOf(rs.getInt("member_id"));
                String fname = rs.getString("fname");
                String lname = rs.getString("lname");
                String user = rs.getString("user");
                String phone = rs.getString("phone");

                String tbData[] = {user, fname, lname, phone};

                DefaultTableModel tbModel = (DefaultTableModel) tableUser.getModel();

                tbModel.addRow(tbData);
                sumuser++;
            }
            total.setText("Total User : " + sumuser);
            System.out.print(sumuser);

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    //view Movie table
    public void viewMovietable() {
        DefaultTableModel model = (DefaultTableModel) tableMovie.getModel();
        while (model.getRowCount() > 0) {
            model.setRowCount(0);
        }
        try {

            Connection con = Cinema.connectDB();
            Statement stm = con.createStatement();

            String sqlMovie = "SELECT * FROM movie";
            ResultSet rs = stm.executeQuery(sqlMovie);

            while (rs.next()) {
                String movieID = rs.getString("movie_id");
                String movieName = rs.getString("movie_name");
                String description = rs.getString("description");
                String time = rs.getString("time");
                //String phone = rs.getString("phone");

                String tbData[] = {movieID, movieName, time, description};
                DefaultTableModel tbModel2 = (DefaultTableModel) tableMovie.getModel();

                tbModel2.addRow(tbData);

            }

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    //view Showtime Table
    public void viewShowtimetable() {
        DefaultTableModel model = (DefaultTableModel) tableShowtime.getModel();
        while (model.getRowCount() > 0) {
            model.setRowCount(0);
        }
        try {
            Connection con = Cinema.connectDB();
            Statement stm = con.createStatement();

            String sqlMovie = "SELECT * FROM cycle_composit NATURAL JOIN cycle NATURAL JOIN movie";
            ResultSet rs = stm.executeQuery(sqlMovie);

            while (rs.next()) {

                String movieName = rs.getString("movie_name");
                String date = rs.getString("cycle_date");
                String time = rs.getString("cycle.cycle_time_start_end");
                String room = rs.getString("room_id");

                String tbData[] = {date, time, room, movieName};

                DefaultTableModel tbModel3 = (DefaultTableModel) tableShowtime.getModel();
                tbModel3.addRow(tbData);

            }

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    //Delete movie Table
    public void deleteMovietable() {
        DefaultTableModel model = (DefaultTableModel) tableMovietoDelete.getModel();
        while (model.getRowCount() > 0) {
            model.setRowCount(0);
        }
        try {

            Connection con = Cinema.connectDB();
            Statement stm = con.createStatement();

            String sqlMovie = "SELECT * FROM movie";
            ResultSet rs = stm.executeQuery(sqlMovie);

            while (rs.next()) {
                String movieID = rs.getString("movie_id");
                String movieName = rs.getString("movie_name");
                String description = rs.getString("description");
                String time = rs.getString("time");
                //String phone = rs.getString("phone");

                String tbData[] = {movieID, movieName, time, description};
                DefaultTableModel tbModel4 = (DefaultTableModel) tableMovietoDelete.getModel();

                tbModel4.addRow(tbData);

            }

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    //delete showtime table
    public void deleteShowtimetable() {
        DefaultTableModel model = (DefaultTableModel) tableShowtimetoDelete.getModel();
        while (model.getRowCount() > 0) {
            model.setRowCount(0);
        }
        try {
            Connection con = Cinema.connectDB();
            Statement stm = con.createStatement();

            String sqlMovie = "SELECT * FROM cycle_composit NATURAL JOIN cycle NATURAL JOIN movie";
            ResultSet rs = stm.executeQuery(sqlMovie);

            while (rs.next()) {
                String cycleID = rs.getString("cycle_com_id");
                String date = rs.getString("cycle_date");
                String time = rs.getString("cycle.cycle_time_start_end");
                String movieName = rs.getString("movie_name");
                String room = rs.getString("room_id");

                String tbData[] = {cycleID, date, time, room, movieName};

                DefaultTableModel tbModel5 = (DefaultTableModel) tableShowtimetoDelete.getModel();
                tbModel5.addRow(tbData);

            }

            con.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void showDataNameMovie() {

        try {
            pstCycle = (com.mysql.jdbc.PreparedStatement) conCycle.prepareStatement("select * from movie");
            rsCycle = (com.mysql.jdbc.ResultSet) pstCycle.executeQuery();
            NameMovie.removeAllItems();
            NameMovie.addItem("Select Movie");

            while (rsCycle.next()) {

                NameMovie.addItem(rsCycle.getString(2));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void showDataImgMovie() {

        System.out.println("imgggggggggggg");
        if (!(NameMovie.getSelectedItem().toString().equals("Select Movie"))) {
            try {
                String namedata = NameMovie.getSelectedItem().toString();
                System.out.println(namedata);
                String sql = "select movie_id,movie_pic from movie where movie_name =?";
                pstCycle = (com.mysql.jdbc.PreparedStatement) conCycle.prepareStatement(sql);
                pstCycle.setString(1, namedata);

                pstCycle.execute();
                rsCycle = (com.mysql.jdbc.ResultSet) pstCycle.executeQuery();

                rsCycle.first();
                idMovie = rsCycle.getString("movie_id");
                System.out.println(idMovie);
                String imagedata = rsCycle.getString("movie_pic");
                System.out.println(imagedata);

                formatCycle = new ImageIcon(imagedata);
                Image m = formatCycle.getImage();
                Image img = m.getScaledInstance(imgmovie.getWidth(), imgmovie.getHeight(), Image.SCALE_FAST);
                ImageIcon image = new ImageIcon(img);
                imgmovie.setIcon(image);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }

    public void showIdRoom() {
        if (idRoom.getSelectedItem() != "Select Room") {
            room_id = (String) idRoom.getSelectedItem();
            System.out.println(room_id);
        }

    }

    public void showDataRoom() {
        try {
            pstCycle = (com.mysql.jdbc.PreparedStatement) conCycle.prepareStatement("select * from room");
            rsCycle = (com.mysql.jdbc.ResultSet) pstCycle.executeQuery();

            idRoom.removeAllItems();
            idRoom.addItem("Select Room");
            while (rsCycle.next()) {
                System.out.println(rsCycle.getString("room_id"));
                idRoom.addItem(rsCycle.getString("room_id"));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void showIdTime() {
        String timeCycle = (String) cycle.getSelectedItem();
        System.out.println(timeCycle);

        if (!("Select time".equals(timeCycle))) {

            if (timeCycle.equals("09:00-11:00")) {
                idCycle = "C01";
            } else if (timeCycle.equals("12:00-15:00")) {
                idCycle = "C02";
            } else if (timeCycle.equals("15:00-18:00")) {
                idCycle = "C03";
            }
            System.out.println(idCycle);
        }
    }

    public void showDataTime() {
        try {
            pstCycle = (com.mysql.jdbc.PreparedStatement) conCycle.prepareStatement("select * from cycle");
            rsCycle = (com.mysql.jdbc.ResultSet) pstCycle.executeQuery();
            cycle.removeAllItems();
            cycle.addItem("Select time");
            while (rsCycle.next()) {
                cycle.addItem(rsCycle.getString(2));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void viewShowtimeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewShowtimeButtonMouseClicked
        jTabbedPane2.setSelectedIndex(3);
        viewShowtimetable();

    }//GEN-LAST:event_viewShowtimeButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        this.dispose();
        Login l1 = new Login();
        l1.setVisible(true);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void viewUserbuttonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_viewUserbuttonFocusGained

    }//GEN-LAST:event_viewUserbuttonFocusGained

    private void viewUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewUserMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_viewUserMouseClicked

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fnwf = new FileNameExtensionFilter("PNG JPG AND JPEG", "png", "jpg", "jpeg");
        fileChooser.addChoosableFileFilter(fnwf);
        int load = fileChooser.showOpenDialog(null);

        if (load == fileChooser.APPROVE_OPTION) {
            f = fileChooser.getSelectedFile();

            path = f.getAbsolutePath();
            url.setText(path);
            ImageIcon imageicon = new ImageIcon(path);

            Image img = imageicon.getImage().getScaledInstance(imageshow.getWidth(), imageshow.getHeight(), Image.SCALE_SMOOTH);
            imageshow.setIcon(new ImageIcon(img));
            checkAddmovie = true;

        }
    }//GEN-LAST:event_BrowseActionPerformed

    private void movienameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movienameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movienameActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (movieid.getText().equals("") || moviename.getText().equals("") || description.getText().equals("") || time.getText().equals("") || checkAddmovie == false) {
            JOptionPane.showMessageDialog(this, "Fill up this form.");
        } else {
            movie = new Movie(movieid.getText(), moviename.getText(), description.getText(), time.getText(), url.getText());
            System.out.println("Success Save movie");
            JOptionPane.showMessageDialog(this, "Save Movie Success");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void movieidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieidActionPerformed

    private void descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionActionPerformed

    private void viewMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewMovieMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_viewMovieMouseClicked

    private void NameMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameMovieActionPerformed

    }//GEN-LAST:event_NameMovieActionPerformed

    private void NameMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NameMovieMouseClicked
        // TODO add your handling code here:
        showDataImgMovie();
    }//GEN-LAST:event_NameMovieMouseClicked

    private void idRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idRoomActionPerformed

    }//GEN-LAST:event_idRoomActionPerformed

    private void idRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idRoomMouseClicked

        showIdRoom();

    }//GEN-LAST:event_idRoomMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        Cycle_composit cycle_composit = new Cycle_composit(idCycle, currentDate, room_id, idMovie);
        System.out.println("Success Save movie");
        JOptionPane.showMessageDialog(this, "Save Showtime Success");

    }//GEN-LAST:event_saveMouseClicked

    private void addShowtimebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addShowtimebuttonMouseClicked
        jTabbedPane2.setSelectedIndex(4);

        conCycle = (com.mysql.jdbc.Connection) Cinema.connectDB();
        showDataNameMovie();
        showDataImgMovie();
        showDataRoom();
        showDataTime();
        Calendar c = Calendar.getInstance();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        currentDate = df.format(c.getTime());
        System.out.println("Current Date : " + currentDate);
        date.setText(currentDate);
    }//GEN-LAST:event_addShowtimebuttonMouseClicked

    private void viewShowtimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewShowtimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_viewShowtimeMouseClicked

    private void addShowtimebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addShowtimebuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addShowtimebuttonActionPerformed

    private void addMoviebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoviebuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMoviebuttonActionPerformed

    private void addMoviebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMoviebuttonMouseClicked
        jTabbedPane2.setSelectedIndex(5);


    }//GEN-LAST:event_addMoviebuttonMouseClicked

    private void backToshowTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToshowTimeMouseClicked
        jTabbedPane2.setSelectedIndex(3);
        viewShowtimetable();
    }//GEN-LAST:event_backToshowTimeMouseClicked

    private void backTomovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTomovieMouseClicked
        jTabbedPane2.setSelectedIndex(2);
        viewMovietable();
    }//GEN-LAST:event_backTomovieMouseClicked

    private void deleteMoviebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMoviebuttonMouseClicked
        jTabbedPane2.setSelectedIndex(6);
        deleteMovietable();

    }//GEN-LAST:event_deleteMoviebuttonMouseClicked

    private void deleteMoviebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMoviebuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMoviebuttonActionPerformed

    private void deleteMoviecomfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMoviecomfirmButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMoviecomfirmButtonActionPerformed

    private void backTomovie1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backTomovie1MouseClicked
        jTabbedPane2.setSelectedIndex(2);
        viewMovietable();
    }//GEN-LAST:event_backTomovie1MouseClicked

    private void deleteMoviecomfirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMoviecomfirmButtonMouseClicked
        Connection con = Cinema.connectDB();
        PreparedStatement pst;
        int row = tableMovietoDelete.getSelectedRow();
        int input = JOptionPane.showConfirmDialog(null,
                "Comfirm delete Movie", "Comfirm delete.", JOptionPane.YES_NO_OPTION);

        // 0=yes, 1=no, 
        if (input == 0) {
            String id = (String) tableMovietoDelete.getModel().getValueAt(row, 0);
            try {
                String qry = "DELETE FROM movie WHERE movie_id = '" + id + "'";
                pst = con.prepareStatement(qry);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Delete Movie Success");
                deleteMovietable();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_deleteMoviecomfirmButtonMouseClicked

    private void deleteMoviebutton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMoviebutton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMoviebutton1MouseClicked

    private void deleteMoviebutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMoviebutton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMoviebutton1ActionPerformed

    private void deleteShowtimebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteShowtimebuttonMouseClicked
        jTabbedPane2.setSelectedIndex(7);
        deleteShowtimetable();
    }//GEN-LAST:event_deleteShowtimebuttonMouseClicked

    private void deleteShowtimebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShowtimebuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteShowtimebuttonActionPerformed

    private void deleteShowtimecomfirmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteShowtimecomfirmButtonMouseClicked
        Connection con = Cinema.connectDB();
        PreparedStatement pst;
        int row = tableShowtimetoDelete.getSelectedRow();
        int input = JOptionPane.showConfirmDialog(null,
                "Comfirm delete Movie", "Comfirm delete.", JOptionPane.YES_NO_OPTION);

        // 0=yes, 1=no, 
        if (input == 0) {
            String cycleID = (String) tableShowtimetoDelete.getModel().getValueAt(row, 0);

            try {
                String qry = "DELETE FROM cycle_composit WHERE cycle_com_id = '" + cycleID + "'";
                pst = con.prepareStatement(qry);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Delete Showtime Success");
                deleteShowtimetable();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_deleteShowtimecomfirmButtonMouseClicked

    private void deleteShowtimecomfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShowtimecomfirmButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteShowtimecomfirmButtonActionPerformed

    private void backToshowtimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToshowtimeMouseClicked
        jTabbedPane2.setSelectedIndex(3);
        viewShowtimetable();

    }//GEN-LAST:event_backToshowtimeMouseClicked

    private void cycleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cycleMouseClicked
        showIdTime();
    }//GEN-LAST:event_cycleMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
            /*Add movie */

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Blank;
    private javax.swing.JButton Browse;
    private javax.swing.JComboBox<String> NameMovie;
    private javax.swing.JPanel addMovie;
    private javax.swing.JButton addMoviebutton;
    private javax.swing.JLabel addMovietext;
    private javax.swing.JPanel addShowtime;
    private javax.swing.JButton addShowtimebutton;
    private javax.swing.JLabel backTomovie;
    private javax.swing.JLabel backTomovie1;
    private javax.swing.JLabel backToshowTime;
    private javax.swing.JLabel backToshowtime;
    private javax.swing.JComboBox<String> cycle;
    private javax.swing.JTextField date;
    private javax.swing.JPanel deleteMovie;
    private javax.swing.JButton deleteMoviebutton;
    private javax.swing.JButton deleteMoviebutton1;
    private javax.swing.JButton deleteMoviecomfirmButton;
    private javax.swing.JPanel deleteShowtime;
    private javax.swing.JButton deleteShowtimebutton;
    private javax.swing.JButton deleteShowtimecomfirmButton;
    private javax.swing.JTextField description;
    private javax.swing.JPanel exitButton;
    private javax.swing.JComboBox<String> idRoom;
    private javax.swing.JLabel imageshow;
    private javax.swing.JLabel imgmovie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField movieid;
    private javax.swing.JTextField moviename;
    private javax.swing.JButton save;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel showtimeText;
    private javax.swing.JTable tableMovie;
    private javax.swing.JTable tableMovietoDelete;
    private javax.swing.JTable tableShowtime;
    private javax.swing.JTable tableShowtimetoDelete;
    private javax.swing.JTable tableUser;
    private javax.swing.JTextField time;
    private javax.swing.JLabel total;
    private javax.swing.JLabel url;
    private javax.swing.JPanel viewMovie;
    private javax.swing.JPanel viewMoviebutton;
    private javax.swing.JPanel viewShowtime;
    private javax.swing.JPanel viewShowtimeButton;
    private javax.swing.JPanel viewUser;
    private javax.swing.JPanel viewUserbutton;
    private javax.swing.JLabel viewUsertext;
    // End of variables declaration//GEN-END:variables
}
